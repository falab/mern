{"version":3,"sources":["application.min.js","application.js","main.js","utilities/xhr.js"],"names":["_typeof","Symbol","iterator","obj","constructor","window","App","_modules","loaded","unloaded","scopes","logger","log","console","apply","arguments","info","warn","error","table","registerModule","modName","modData","undefined","Object","keys","indexOf","moduleLoaded","moduleRegistered","key","loadModule","fn","scope","hasOwnProperty","modFn","pop","dependencies","forEach","depName","i","push","name","loadModules","module","init","app","xhr","options","url"],"mappings":"AAAA,YAEA,IAAIA,SAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,OAAS,eAAkBE,GCF1OE,QAAOC,IAAM,WACX,GACIC,IACFC,UACAC,YACAC,WAKEC,EAAU,WACZ,OACEC,IAAK,WAAcC,QAAQD,IAAIE,MAAMD,QAASE,YAC9CC,KAAM,WAAcH,QAAQG,KAAKF,MAAMD,QAASE,YAChDE,KAAM,WAAcJ,QAAQI,KAAKH,MAAMD,QAASE,YAChDG,MAAO,WAAcL,QAAQK,MAAMJ,MAAMD,QAASE,YAClDI,MAAO,WAAcN,QAAQM,MAAML,MAAMD,QAASE,gBAMlDK,EAAiB,SAACC,EAASC,GAE7B,MAAgBC,UAAZD,GACsD,KAApDE,OAAOC,KAAKlB,EAASE,UAAUiB,QAAQL,GACzCV,EAAOM,KAAI,WAAYI,EAAO,qCAE9Bd,EAASE,SAASY,GAAWC,EAGxBf,EAASE,SAASY,IAI2B,KAAlDG,OAAOC,KAAKlB,EAASC,QAAQkB,QAAQL,OACvCV,GAAOO,MAAK,WAAYG,EAAO,mBAI1Bd,EAASC,OAAOa,IAGrBM,EAAe,SAAUN,GAC3B,MAAOG,QAAOC,KAAKlB,EAASC,QAAQkB,QAAQL,GAAW,IAGrDO,EAAmB,SAAUP,GAC/B,MAAOG,QAAOK,IAAItB,EAASE,UAAUiB,QAAQL,GAAW,IAGtDS,EAAa,QAAbA,GAAuBT,GACzB,GAAIC,GAAUf,EAASE,SAASY,EAEhC,IAAuB,kBAAZC,GACTA,GACES,GAAIT,EACJU,cAEG,IAAIV,EAAQW,eAAe,UAAW,CAC3C,GAAIC,GAAQZ,EAAQa,KAEpBb,IACES,GAAIG,EACJE,aAAcd,EACdU,cAEG,IAAuB,YAAL,mBAAPV,GAAO,YAAAtB,QAAPsB,IAEhB,WADAX,GAAOO,MAAK,WAAYG,EAAO,yBAI5BC,GAAQW,eAAe,WAC1BX,EAAQU,SAGV,IAAII,KAGyBb,UAAzBD,EAAQc,cACVd,EAAQc,aAAaC,QAAQ,SAACC,EAASC,GACrC,IAAKZ,EAAaW,GAAU,CAC1B,IAAKV,EAEH,WADAjB,GAAOO,MAAK,eAAgBoB,EAAO,6BAIrCR,GAAWQ,GACXF,EAAaI,KAAKjC,EAASC,OAAO8B,OAKxC/B,EAASG,OAAOW,GAAWC,EAAQU,MACnCzB,EAASC,OAAOa,GAAWC,EAAQS,GAAGjB,MAAMQ,EAAQU,MAAOI,GAC3DzB,EAAOK,KAAI,WAAYK,EAAO,mBAEvBd,GAASE,SAASgC,OAGvBC,EAAc,WAChBlB,OAAOC,KAAKlB,EAASE,UAAU4B,QAAQ,SAAChB,GACjCM,EAAaN,IAChBS,EAAWT,KAKjB,QACEV,OAAQA,EACRgC,OAAQvB,EACRwB,KAAM,WACJF,OAKNrC,OAAOwC,IAAMvC,MCrHbuC,IAAIF,OAAO,QAAS,MAAO,SAACG,GAC1BD,IAAIlC,OAAOK,KAAK,kBAChB8B,EAAI,4BCFND,IAAIF,OAAO,MAAO,WAChB,MAAO,UAACI,GACiB,gBAAZA,KACTA,GACEC,IAAKD,IAITF,IAAIlC,OAAOK,KAAI,qBAAsB+B,EAAQC,IAAG","file":"application.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nwindow.App = function () {\n  var _data = {};\n  var _modules = {\n    loaded: {},\n    unloaded: {},\n    scopes: {}\n  };\n\n  // Abstract logging for later\n  // TODO: create custom logging\n  var logger = function () {\n    return {\n      log: function log() {\n        console.log.apply(console, arguments);\n      },\n      info: function info() {\n        console.info.apply(console, arguments);\n      },\n      warn: function warn() {\n        console.warn.apply(console, arguments);\n      },\n      error: function error() {\n        console.error.apply(console, arguments);\n      },\n      table: function table() {\n        console.table.apply(console, arguments);\n      }\n    };\n  }();\n\n  // When passed only a modName, returns module\n  // when passed modName and modData, registers a module for loading\n  var registerModule = function registerModule(modName, modData) {\n    // If modData is passed, register and return unloaded module\n    if (modData !== undefined) {\n      if (Object.keys(_modules.unloaded).indexOf(modName) !== -1) {\n        logger.warn('Module \\'' + modName + '\\' already registered for loading.');\n      } else {\n        _modules.unloaded[modName] = modData;\n      }\n\n      return _modules.unloaded[modName];\n    }\n\n    // If modData is not passed return loaded module\n    if (Object.keys(_modules.loaded).indexOf(modName) === -1) {\n      logger.error('Module \\'' + modName + '\\' doesn\\'t exist');\n      return;\n    }\n\n    return _modules.loaded[modName];\n  };\n\n  var moduleLoaded = function moduleLoaded(modName) {\n    return Object.keys(_modules.loaded).indexOf(modName) > -1;\n  };\n\n  var moduleRegistered = function moduleRegistered(modName) {\n    return Object.key(_modules.unloaded).indexOf(modName) > -1;\n  };\n\n  var loadModule = function loadModule(modName) {\n    var modData = _modules.unloaded[modName];\n\n    if (typeof modData === 'function') {\n      modData = {\n        fn: modData,\n        scope: {}\n      };\n    } else if (modData.hasOwnProperty('length')) {\n      var modFn = modData.pop();\n\n      modData = {\n        fn: modFn,\n        dependencies: modData,\n        scope: {}\n      };\n    } else if ((typeof modData === 'undefined' ? 'undefined' : _typeof(modData)) !== \"object\") {\n      logger.error('Module \\'' + modName + '\\' could not be loaded.');\n      return;\n    }\n\n    if (!modData.hasOwnProperty('scope')) {\n      modData.scope = {};\n    }\n\n    var dependencies = [];\n\n    // TODO: handle 'call stack exceeded'\n    if (modData.dependencies !== undefined) {\n      modData.dependencies.forEach(function (depName, i) {\n        if (!moduleLoaded(depName)) {\n          if (!moduleRegistered) {\n            logger.error('Dependency \\'' + depName + '\\' not a registered module.');\n            return;\n          }\n\n          loadModule(depName);\n          dependencies.push(_modules.loaded[depName]);\n        }\n      });\n    }\n\n    _modules.scopes[modName] = modData.scope;\n    _modules.loaded[modName] = modData.fn.apply(modData.scope, dependencies);\n    logger.info('Module \\'' + modName + '\\' loaded!');\n\n    delete _modules.unloaded[name];\n  };\n\n  var loadModules = function loadModules() {\n    Object.keys(_modules.unloaded).forEach(function (modName) {\n      if (!moduleLoaded(modName)) {\n        loadModule(modName);\n      }\n    });\n  };\n\n  return {\n    logger: logger,\n    module: registerModule,\n    init: function init() {\n      loadModules();\n    }\n  };\n};\n\nwindow.app = App();\n'use strict';\n\napp.module('main', ['xhr', function (xhr) {\n  app.logger.info('main loaded!!!');\n  xhr('http://www.google.com');\n}]);\n\"use strict\";\n\napp.module('xhr', function () {\n  return function (options) {\n    if (typeof options === \"string\") {\n      options = {\n        url: options\n      };\n    }\n\n    app.logger.info(\"Performing XHR to \" + options.url + \" here\");\n  };\n});","window.App = function () {\n  let _data = {};\n  let _modules = {\n    loaded: {},\n    unloaded: {},\n    scopes: {}\n  };\n\n  // Abstract logging for later\n  // TODO: create custom logging\n  let logger = (function () {\n    return {\n      log: function () { console.log.apply(console, arguments); },\n      info: function () { console.info.apply(console, arguments); },\n      warn: function () { console.warn.apply(console, arguments); },\n      error: function () { console.error.apply(console, arguments); },\n      table: function () { console.table.apply(console, arguments); },\n    };\n  }());\n\n  // When passed only a modName, returns module\n  // when passed modName and modData, registers a module for loading\n  let registerModule = (modName, modData) => {\n    // If modData is passed, register and return unloaded module\n    if (modData !== undefined) {\n      if (Object.keys(_modules.unloaded).indexOf(modName) !== -1) {\n        logger.warn(`Module '${modName}' already registered for loading.`);\n      } else {\n        _modules.unloaded[modName] = modData;\n      }\n\n      return _modules.unloaded[modName];\n    }\n\n    // If modData is not passed return loaded module\n    if (Object.keys(_modules.loaded).indexOf(modName) === -1) {\n      logger.error(`Module '${modName}' doesn't exist`);\n      return;\n    }\n\n    return _modules.loaded[modName];\n  };\n\n  let moduleLoaded = function (modName) {\n    return Object.keys(_modules.loaded).indexOf(modName) > -1;\n  };\n\n  let moduleRegistered = function (modName) {\n    return Object.key(_modules.unloaded).indexOf(modName) > -1;\n  };\n\n  let loadModule = function (modName) {\n    let modData = _modules.unloaded[modName];\n\n    if (typeof modData === 'function') {\n      modData = {\n        fn: modData,\n        scope: {}\n      };\n    } else if (modData.hasOwnProperty('length')) {\n      let modFn = modData.pop();\n\n      modData = {\n        fn: modFn,\n        dependencies: modData,\n        scope: {}\n      };\n    } else if (typeof modData !== \"object\") {\n      logger.error(`Module '${modName}' could not be loaded.`);\n      return;\n    }\n\n    if (!modData.hasOwnProperty('scope')) {\n      modData.scope = {};\n    }\n\n    let dependencies = [];\n\n    // TODO: handle 'call stack exceeded'\n    if (modData.dependencies !== undefined) {\n      modData.dependencies.forEach((depName, i) => {\n        if (!moduleLoaded(depName)) {\n          if (!moduleRegistered) {\n            logger.error(`Dependency '${depName}' not a registered module.`);\n            return;\n          }\n\n          loadModule(depName);\n          dependencies.push(_modules.loaded[depName]);\n        }\n      });\n    }\n\n    _modules.scopes[modName] = modData.scope;\n    _modules.loaded[modName] = modData.fn.apply(modData.scope, dependencies);\n    logger.info(`Module '${modName}' loaded!`);\n\n    delete _modules.unloaded[name];\n  };\n\n  let loadModules = function () {\n    Object.keys(_modules.unloaded).forEach((modName) => {\n      if (!moduleLoaded(modName)) {\n        loadModule(modName);\n      }\n    });\n  };\n\n  return {\n    logger: logger,\n    module: registerModule,\n    init: () => {\n      loadModules();\n    }\n  };\n};\n\nwindow.app = App();\n","app.module('main', ['xhr', (xhr) => {\n  app.logger.info('main loaded!!!');\n  xhr('http://www.google.com');\n}]);\n","app.module('xhr', function () {\n  return (options) => {\n    if (typeof options === \"string\") {\n      options = {\n        url: options\n      };\n    }\n\n    app.logger.info(`Performing XHR to ${options.url} here`);\n  };\n});\n"],"sourceRoot":"/source/"}