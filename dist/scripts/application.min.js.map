{"version":3,"sources":["application.min.js","zframe.js","main.js","router.js","utilities/xhr.js"],"names":["_typeof","Symbol","iterator","obj","constructor","window","Zframe","moduleRegistered","modName","Object","key","_modules","unloaded","indexOf","moduleLoaded","keys","loaded","loadModule","modData","fn","scope","hasOwnProperty","modFn","pop","dependencies","utils","logger","error","undefined","forEach","depName","i","push","scopes","apply","info","name","loadModules","ret","log","console","arguments","warn","table","extend","obj1","obj2","module","init","zframe","appContainer","document","getElementById","data","menuItems","path","text","remote","innerHTML","Templates","application","routes","addRoute","spec","defaultRoute","when","otherwise","options","url"],"mappings":"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","file":"application.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nwindow.Zframe = function () {\n  var _data = {},\n      _modules = {\n    loaded: {},\n    unloaded: {},\n    scopes: {}\n  },\n      _fn = {},\n      utils = {},\n      ret = {};\n\n  // Check if a module is registered for loading\n  function moduleRegistered(modName) {\n    return Object.key(_modules.unloaded).indexOf(modName) > -1;\n  }\n\n  // Check if a module has been loaded\n  function moduleLoaded(modName) {\n    return Object.keys(_modules.loaded).indexOf(modName) > -1;\n  }\n\n  // load a module\n  function loadModule(modName) {\n    var modData = _modules.unloaded[modName];\n\n    if (typeof modData === 'function') {\n      modData = {\n        fn: modData,\n        scope: {}\n      };\n    } else if (modData.hasOwnProperty('length')) {\n      var modFn = modData.pop();\n\n      modData = {\n        fn: modFn,\n        dependencies: modData,\n        scope: {}\n      };\n    } else if ((typeof modData === 'undefined' ? 'undefined' : _typeof(modData)) !== \"object\") {\n      utils.logger.error('Module \\'' + modName + '\\' could not be loaded.');\n      return;\n    }\n\n    if (!modData.hasOwnProperty('scope')) {\n      modData.scope = {};\n    }\n\n    var dependencies = [];\n\n    // TODO: handle 'call stack exceeded'\n    if (modData.dependencies !== undefined) {\n      modData.dependencies.forEach(function (depName, i) {\n        if (!moduleLoaded(depName)) {\n          if (!moduleRegistered) {\n            utils.logger.error('Dependency \\'' + depName + '\\' not a registered module.');\n            return;\n          }\n\n          loadModule(depName);\n          dependencies.push(_modules.loaded[depName]);\n        }\n      });\n    }\n\n    _modules.scopes[modName] = modData.scope;\n    _modules.loaded[modName] = modData.fn.apply(modData.scope, dependencies);\n\n    utils.logger.info('Module \\'' + modName + '\\' loaded!');\n\n    delete _modules.unloaded[name];\n  }\n\n  // Load all unloaded modules\n  function loadModules() {\n    Object.keys(_modules.unloaded).forEach(function (modName) {\n      if (!moduleLoaded(modName)) {\n        loadModule(modName);\n      }\n    });\n  }\n\n  // Abstract logging for later\n  // TODO: create custom logging\n  utils.logger = {\n    log: function log() {\n      console.log.apply(console, arguments);\n    },\n    info: function info() {\n      console.info.apply(console, arguments);\n    },\n    warn: function warn() {\n      console.warn.apply(console, arguments);\n    },\n    error: function error() {\n      console.error.apply(console, arguments);\n    },\n    table: function table() {\n      console.table.apply(console, arguments);\n    }\n  };\n\n  // Add the properties of one object to another, shallow copy\n  utils.extend = function (obj1, obj2) {\n    if ((typeof obj2 === 'undefined' ? 'undefined' : _typeof(obj2)) !== 'object') {\n      return;\n    }\n\n    Object.keys(obj2).forEach(function (key) {\n      obj1[key] = obj2[key];\n    });\n\n    return obj1;\n  };\n\n  // When passed only a modName, returns module\n  // when passed modName and modData, registers a module for loading\n  ret.module = function (modName, modData) {\n    // If modData is passed, register and return unloaded module\n    if (modData !== undefined) {\n      if (Object.keys(_modules.unloaded).indexOf(modName) !== -1) {\n        utils.logger.warn('Module \\'' + modName + '\\' already registered for loading.');\n      } else {\n        _modules.unloaded[modName] = modData;\n      }\n\n      return _modules.unloaded[modName];\n    }\n\n    // If modData is not passed return loaded module\n    if (Object.keys(_modules.loaded).indexOf(modName) === -1) {\n      utils.logger.error('Module \\'' + modName + '\\' doesn\\'t exist');\n      return;\n    }\n\n    return _modules.loaded[modName];\n  };\n\n  // Initializes all of the modules\n  ret.init = function () {\n    loadModules();\n    utils.logger.info('zframe initialized');\n  };\n\n  utils.logger.info('zframe loaded');\n\n  // Combine utility functions into the return object for use in modules\n  return utils.extend(ret, utils);\n};\n\nwindow.zframe = Zframe();\n'use strict';\n\nzframe.module('main', function () {\n  var appContainer = document.getElementById('app');\n\n  var data = {\n    menuItems: [{ path: '/', text: 'home' }, { path: '/portfolio', text: 'portfolio' }, { path: 'http://www.google.com', text: 'Google', remote: true }]\n  };\n\n  appContainer.innerHTML = zframe.Templates.application(data);\n});\n'use strict';\n\nzframe.module('router', function () {\n  var routes = [];\n\n  var addRoute = function addRoute(path, spec) {\n    routes[path] = spec;\n  };\n\n  var defaultRoute = function defaultRoute(spec) {\n    return addRoute('/', spec);\n  };\n\n  return {\n    when: addRoute,\n    otherwise: defaultRoute\n  };\n});\n\"use strict\";\n\nzframe.module('xhr', function () {\n  return function (options) {\n    if (typeof options === \"string\") {\n      options = {\n        url: options\n      };\n    }\n\n    zframe.logger.info(\"Performing XHR to \" + options.url + \" here\");\n  };\n});","window.Zframe = function () {\n  let _data = {},\n    _modules = {\n      loaded: {},\n      unloaded: {},\n      scopes: {}\n    },\n    _fn = {},\n    utils = {},\n    ret = {};\n\n  // Check if a module is registered for loading\n  function moduleRegistered(modName) {\n    return Object.key(_modules.unloaded).indexOf(modName) > -1;\n  }\n\n  // Check if a module has been loaded\n  function moduleLoaded(modName) {\n    return Object.keys(_modules.loaded).indexOf(modName) > -1;\n  }\n\n  // load a module\n  function loadModule(modName) {\n    let modData = _modules.unloaded[modName];\n\n    if (typeof modData === 'function') {\n      modData = {\n        fn: modData,\n        scope: {}\n      };\n    } else if (modData.hasOwnProperty('length')) {\n      let modFn = modData.pop();\n\n      modData = {\n        fn: modFn,\n        dependencies: modData,\n        scope: {}\n      };\n    } else if (typeof modData !== \"object\") {\n      utils.logger.error(`Module '${modName}' could not be loaded.`);\n      return;\n    }\n\n    if (!modData.hasOwnProperty('scope')) {\n      modData.scope = {};\n    }\n\n    let dependencies = [];\n\n    // TODO: handle 'call stack exceeded'\n    if (modData.dependencies !== undefined) {\n      modData.dependencies.forEach((depName, i) => {\n        if (!moduleLoaded(depName)) {\n          if (!moduleRegistered) {\n            utils.logger.error(`Dependency '${depName}' not a registered module.`);\n            return;\n          }\n\n          loadModule(depName);\n          dependencies.push(_modules.loaded[depName]);\n        }\n      });\n    }\n\n    _modules.scopes[modName] = modData.scope;\n    _modules.loaded[modName] = modData.fn.apply(modData.scope, dependencies);\n\n    utils.logger.info(`Module '${modName}' loaded!`);\n\n    delete _modules.unloaded[name];\n  }\n\n  // Load all unloaded modules\n  function loadModules() {\n    Object.keys(_modules.unloaded).forEach((modName) => {\n      if (!moduleLoaded(modName)) {\n        loadModule(modName);\n      }\n    });\n  }\n\n  // Abstract logging for later\n  // TODO: create custom logging\n  utils.logger = {\n    log: function () {\n      console.log.apply(console, arguments);\n    },\n    info: function () {\n      console.info.apply(console, arguments);\n    },\n    warn: function () {\n      console.warn.apply(console, arguments);\n    },\n    error: function () {\n      console.error.apply(console, arguments);\n    },\n    table: function () {\n      console.table.apply(console, arguments);\n    },\n  };\n\n  // Add the properties of one object to another, shallow copy\n  utils.extend = (obj1, obj2) => {\n    if (typeof obj2 !== 'object') {\n      return;\n    }\n\n    Object.keys(obj2).forEach((key) => {\n      obj1[key] = obj2[key];\n    });\n\n    return obj1;\n  };\n\n  // When passed only a modName, returns module\n  // when passed modName and modData, registers a module for loading\n  ret.module = (modName, modData) => {\n    // If modData is passed, register and return unloaded module\n    if (modData !== undefined) {\n      if (Object.keys(_modules.unloaded).indexOf(modName) !== -1) {\n        utils.logger.warn(`Module '${modName}' already registered for loading.`);\n      } else {\n        _modules.unloaded[modName] = modData;\n      }\n\n      return _modules.unloaded[modName];\n    }\n\n    // If modData is not passed return loaded module\n    if (Object.keys(_modules.loaded).indexOf(modName) === -1) {\n      utils.logger.error(`Module '${modName}' doesn't exist`);\n      return;\n    }\n\n    return _modules.loaded[modName];\n  };\n\n  // Initializes all of the modules\n  ret.init = () => {\n    loadModules();\n    utils.logger.info('zframe initialized');\n  };\n\n  utils.logger.info('zframe loaded');\n\n  // Combine utility functions into the return object for use in modules\n  return utils.extend(ret, utils);\n};\n\nwindow.zframe = Zframe();\n","zframe.module('main', () => {\n  let appContainer = document.getElementById('app');\n\n  let data = {\n    menuItems: [\n      { path: '/', text: 'home' },\n      { path: '/portfolio', text: 'portfolio' },\n      { path: 'http://www.google.com', text: 'Google', remote: true}\n    ]\n  };\n\n  appContainer.innerHTML = zframe.Templates.application(data);\n});\n","zframe.module('router', () => {\n  let routes = [];\n\n  let addRoute = (path, spec) => {\n    routes[path] = spec;\n  };\n\n  let defaultRoute = (spec) => {\n    return addRoute('/', spec);\n  };\n\n  return {\n    when: addRoute,\n    otherwise: defaultRoute\n  };\n});\n","zframe.module('xhr', function () {\n  return (options) => {\n    if (typeof options === \"string\") {\n      options = {\n        url: options\n      };\n    }\n\n    zframe.logger.info(`Performing XHR to ${options.url} here`);\n  };\n});\n"],"sourceRoot":"/source/"}